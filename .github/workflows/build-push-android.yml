name: Build and Push Docker Image ios

on:
  push:
    branches:
    # change later to main
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Restore cache before installing dependencies
      - name: Cache Node.js modules
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.yarn/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      #  installing dependencies if no cache
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
      # Save the cache after dependencies have been installed
      - name: Cache Node.js modules
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: |
            ~/.yarn/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

       
      # setting up Android SDK Tools if no cache
      - name: Setup Android SDK Tools
        if: steps.sdk-cache.outputs.cache-hit != 'true'
        uses: android-actions/setup-android@v3.2.1

      - name: Prebuild app
        run: npx expo prebuild --no-install

      - name: Prepare key-store
        run: |
          cd android/app
          keytool -genkey -v -keystore my-upload-key.keystore -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000 -storepass Over@@20 -keypass Over@@20 -dname "CN=apptest, OU=test.tes, O=test.tes, L=test.tes, S=test.tes, C=US"

      - name: Grant execution permissions for Gradle wrapper
        run: sudo chmod +x ./android/gradlew

      - name: Create gradlew wrapper script
        run: |
          cd android
          echo '#!/bin/bash' > run_gradlew.sh
          echo 'export PATH=/usr/bin:$PATH' >> run_gradlew.sh
          echo './gradlew "$@"' >> run_gradlew.sh
          chmod +x run_gradlew.sh

      - name: Cache Gradle dependencies
        id: gradle-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-build
          restore-keys: |
            ${{ runner.os }}-gradle-build
          
      - name: Cache Metro bundler cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/metro-bundler
            # Add other relevant cache paths here if necessary
          key: ${{ runner.os }}-metro-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-metro-
      
      - name: Build React Native app
        run: |
          cd android
          ./run_gradlew.sh assembleReleaseBoth
      - name: Create user folder if not exists
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: mkdir -p /var/www/user_mobtwin/generated/userId/appId/android
      - name: Transfer apk to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "android/app/build/outputs/apk/release/app-arm64-v8a-release.apk"
          target: "/var/www/user_mobtwin/generated/userId/appId/android"
          strip_components: 7
      - name: Transfer aab to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "android/app/build/outputs/bundle/release/app-release.aab"
          target: "/var/www/user_mobtwin/generated/userId/appId/android"
          strip_components: 7
      - name: Transfer keystore to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "android/app/my-upload-key.keystore"
          target: "/var/www/user_mobtwin/generated/userId/appId/android"
          strip_components: 3
      # - name: Archive AAB  
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: app-arm64-v8a-bundle.aab
      #     path: android/app/build/outputs/bundle/release/app-arm64-v8a-bundle.aab
      # - name: Archive keystore
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: my-upload-key.keystore
      #     path: android/app/my-upload-key.keystore


      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ secrets.DOCKER_USERNAME }}/reactnative:quize_android

      # - name: Logout from Docker Hub
      #   run: docker logout
